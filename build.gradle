buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "gradle.plugin.com.craigburke.gradle:karma-gradle:1.4.3"
        classpath "org.grails.plugins:hibernate4:5.0.4"
        classpath "org.grails.plugins:views-gradle:1.0.8"
        classpath "com.github.jacobono:gradle-jaxb-plugin:1.3.6"
    }
}

plugins {
    id 'com.craigburke.bower-installer' version '2.5.1'
}

version "0.1-SNAPSHOT"
group "com.prototype"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.craigburke.karma"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"
apply plugin:"com.github.jacobono.jaxb"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
    springSecurityRestVersion = project.springSecurityVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.2.7"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails.plugins:spring-security-rest:${springSecurityRestVersion}"
    compile "org.grails.plugins:spring-security-rest-gorm:${springSecurityRestVersion}"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:mail:2.0.0.RC6"
    compile "com.stripe:stripe-java:2.6.1"
    console "org.grails:grails-console"
    profile "org.grails.profiles:angular:3.1.8"
    runtime "com.h2database:h2"
    runtime "org.grails.plugins:asset-pipeline"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    jaxb 'javax.xml.bind:jaxb-api:2.2.7'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bower {
    installBase = 'grails-app/assets/bower'

    additional = [
        'strict-ssl': false,
        'https-proxy': ''
    ]

    'angular'('1.4.10') {
        source 'angular.js' >> '/angular/'
    }
    'angular-animate'('1.4.10') {
        source 'angular-animate.js' >> '/angular/'
    }
    'angular-cookies'('1.4.10') {
        source 'angular-cookies.js' >> '/angular/'
    }
    'angular-resource'('1.4.10') {
        source 'angular-resource.js' >> '/angular/'
    }
    'angular-sanitize'('1.4.10') {
        source 'angular-sanitize.js' >> '/angular/'
    }
    'angular-touch'('1.4.10') {
        source 'angular-touch.js' >> '/angular/'
    }
    'angular-mocks'('1.4.10') {
        source 'angular-mocks.js' >> '/angular/'
    }
    'angular-ui-router'('0.2.18') {
        source 'release/angular-ui-router.js' >> '/angular/'
    }
    'angular-bootstrap'('1.3.3') {
        source 'ui-bootstrap-tpls.js' >> '/bootstrap/'
    }
    'bootstrap'('3.3.6') {
        source 'dist/css/bootstrap.css' >> '/bootstrap/'
        source 'dist/js/bootstrap.js' >> '/bootstrap/'
        source 'dist/fonts/*' >> '/fonts/'
    }
    'components-font-awesome'('4.6.3') {
        source 'css/font-awesome.css' >> '/bootstrap/'
        source 'fonts/*' >> '/fonts/'
    }
    'bootstrap-social'('5.0.0') {
        source 'bootstrap-social.css' >> '/bootstrap/'
    }
    'ngstorage'('0.3.x')
    'angular-treasure-overlay-spinner'('1.1.0')
    'angularjs-toaster'('2.0.0')
    'chartjs'('2.0.2')
    'angular-chart.js'('1.0.0') {
        source 'angular-chart.js' >> '/chartjs/'
    }
    'ng-file-upload-shim'('12.0.4') {
        source 'ng-file-upload.js' >> '/ng-file-upload/'
        source 'ng-file-upload-shim.js' >> '/ng-file-upload/'
    }
}

karma {
    dependencies(['karma-wrap-preprocessor'])

    profile 'angularJS'

    preprocessors = [
        'grails-app/assets/javascripts/**/*.js': ['wrap']
    ]

    wrapPreprocessor = [
        template: "(function () { 'use strict';  <%= contents %> })()"
    ]
}

assets {
    minifyJs = true
    minifyCss = true
}

jaxb {
    xsdDir = "src/main/resources/schemas/Comprobantes"
    xjc {
        generatePackage = "com.actions.prototype.generated.jaxb.comprobantes"
    }
}
